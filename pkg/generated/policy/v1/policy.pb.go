// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.13.0
// source: policy/v1/policy.proto

package policyv1

import (
	v1 "github.com/charithe/menshen/pkg/generated/shared/v1"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PolicySet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Policies map[string]*Policy `protobuf:"bytes,1,rep,name=policies,proto3" json:"policies,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *PolicySet) Reset() {
	*x = PolicySet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_policy_v1_policy_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PolicySet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PolicySet) ProtoMessage() {}

func (x *PolicySet) ProtoReflect() protoreflect.Message {
	mi := &file_policy_v1_policy_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PolicySet.ProtoReflect.Descriptor instead.
func (*PolicySet) Descriptor() ([]byte, []int) {
	return file_policy_v1_policy_proto_rawDescGZIP(), []int{0}
}

func (x *PolicySet) GetPolicies() map[string]*Policy {
	if x != nil {
		return x.Policies
	}
	return nil
}

type Policy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiVersion  string `protobuf:"bytes,1,opt,name=api_version,json=apiVersion,proto3" json:"api_version,omitempty"`
	Disabled    bool   `protobuf:"varint,2,opt,name=disabled,proto3" json:"disabled,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Types that are assignable to PolicyType:
	//	*Policy_ResourcePolicy
	//	*Policy_PrincipalPolicy
	//	*Policy_DerivedRoles
	PolicyType isPolicy_PolicyType `protobuf_oneof:"policy_type"`
}

func (x *Policy) Reset() {
	*x = Policy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_policy_v1_policy_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Policy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Policy) ProtoMessage() {}

func (x *Policy) ProtoReflect() protoreflect.Message {
	mi := &file_policy_v1_policy_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Policy.ProtoReflect.Descriptor instead.
func (*Policy) Descriptor() ([]byte, []int) {
	return file_policy_v1_policy_proto_rawDescGZIP(), []int{1}
}

func (x *Policy) GetApiVersion() string {
	if x != nil {
		return x.ApiVersion
	}
	return ""
}

func (x *Policy) GetDisabled() bool {
	if x != nil {
		return x.Disabled
	}
	return false
}

func (x *Policy) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (m *Policy) GetPolicyType() isPolicy_PolicyType {
	if m != nil {
		return m.PolicyType
	}
	return nil
}

func (x *Policy) GetResourcePolicy() *ResourcePolicy {
	if x, ok := x.GetPolicyType().(*Policy_ResourcePolicy); ok {
		return x.ResourcePolicy
	}
	return nil
}

func (x *Policy) GetPrincipalPolicy() *PrincipalPolicy {
	if x, ok := x.GetPolicyType().(*Policy_PrincipalPolicy); ok {
		return x.PrincipalPolicy
	}
	return nil
}

func (x *Policy) GetDerivedRoles() *DerivedRoles {
	if x, ok := x.GetPolicyType().(*Policy_DerivedRoles); ok {
		return x.DerivedRoles
	}
	return nil
}

type isPolicy_PolicyType interface {
	isPolicy_PolicyType()
}

type Policy_ResourcePolicy struct {
	ResourcePolicy *ResourcePolicy `protobuf:"bytes,4,opt,name=resource_policy,json=resourcePolicy,proto3,oneof"`
}

type Policy_PrincipalPolicy struct {
	PrincipalPolicy *PrincipalPolicy `protobuf:"bytes,5,opt,name=principal_policy,json=principalPolicy,proto3,oneof"`
}

type Policy_DerivedRoles struct {
	DerivedRoles *DerivedRoles `protobuf:"bytes,6,opt,name=derived_roles,json=derivedRoles,proto3,oneof"`
}

func (*Policy_ResourcePolicy) isPolicy_PolicyType() {}

func (*Policy_PrincipalPolicy) isPolicy_PolicyType() {}

func (*Policy_DerivedRoles) isPolicy_PolicyType() {}

type ResourcePolicy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resource           string          `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
	Version            string          `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	ImportDerivedRoles []string        `protobuf:"bytes,3,rep,name=import_derived_roles,json=importDerivedRoles,proto3" json:"import_derived_roles,omitempty"`
	Rules              []*ResourceRule `protobuf:"bytes,4,rep,name=rules,proto3" json:"rules,omitempty"`
}

func (x *ResourcePolicy) Reset() {
	*x = ResourcePolicy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_policy_v1_policy_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourcePolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourcePolicy) ProtoMessage() {}

func (x *ResourcePolicy) ProtoReflect() protoreflect.Message {
	mi := &file_policy_v1_policy_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourcePolicy.ProtoReflect.Descriptor instead.
func (*ResourcePolicy) Descriptor() ([]byte, []int) {
	return file_policy_v1_policy_proto_rawDescGZIP(), []int{2}
}

func (x *ResourcePolicy) GetResource() string {
	if x != nil {
		return x.Resource
	}
	return ""
}

func (x *ResourcePolicy) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ResourcePolicy) GetImportDerivedRoles() []string {
	if x != nil {
		return x.ImportDerivedRoles
	}
	return nil
}

func (x *ResourcePolicy) GetRules() []*ResourceRule {
	if x != nil {
		return x.Rules
	}
	return nil
}

type ResourceRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action       string       `protobuf:"bytes,1,opt,name=action,proto3" json:"action,omitempty"`
	DerivedRoles []string     `protobuf:"bytes,2,rep,name=derived_roles,json=derivedRoles,proto3" json:"derived_roles,omitempty"`
	Roles        []string     `protobuf:"bytes,3,rep,name=roles,proto3" json:"roles,omitempty"`
	Condition    *Computation `protobuf:"bytes,4,opt,name=condition,proto3" json:"condition,omitempty"`
	Effect       v1.Effect    `protobuf:"varint,5,opt,name=effect,proto3,enum=shared.v1.Effect" json:"effect,omitempty"`
}

func (x *ResourceRule) Reset() {
	*x = ResourceRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_policy_v1_policy_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceRule) ProtoMessage() {}

func (x *ResourceRule) ProtoReflect() protoreflect.Message {
	mi := &file_policy_v1_policy_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceRule.ProtoReflect.Descriptor instead.
func (*ResourceRule) Descriptor() ([]byte, []int) {
	return file_policy_v1_policy_proto_rawDescGZIP(), []int{3}
}

func (x *ResourceRule) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *ResourceRule) GetDerivedRoles() []string {
	if x != nil {
		return x.DerivedRoles
	}
	return nil
}

func (x *ResourceRule) GetRoles() []string {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *ResourceRule) GetCondition() *Computation {
	if x != nil {
		return x.Condition
	}
	return nil
}

func (x *ResourceRule) GetEffect() v1.Effect {
	if x != nil {
		return x.Effect
	}
	return v1.Effect_EFFECT_UNSPECIFIED
}

type PrincipalPolicy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Principal string           `protobuf:"bytes,1,opt,name=principal,proto3" json:"principal,omitempty"`
	Version   string           `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Rules     []*PrincipalRule `protobuf:"bytes,3,rep,name=rules,proto3" json:"rules,omitempty"`
}

func (x *PrincipalPolicy) Reset() {
	*x = PrincipalPolicy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_policy_v1_policy_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrincipalPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrincipalPolicy) ProtoMessage() {}

func (x *PrincipalPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_policy_v1_policy_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrincipalPolicy.ProtoReflect.Descriptor instead.
func (*PrincipalPolicy) Descriptor() ([]byte, []int) {
	return file_policy_v1_policy_proto_rawDescGZIP(), []int{4}
}

func (x *PrincipalPolicy) GetPrincipal() string {
	if x != nil {
		return x.Principal
	}
	return ""
}

func (x *PrincipalPolicy) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *PrincipalPolicy) GetRules() []*PrincipalRule {
	if x != nil {
		return x.Rules
	}
	return nil
}

type PrincipalRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resource string                  `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
	Actions  []*PrincipalRule_Action `protobuf:"bytes,2,rep,name=actions,proto3" json:"actions,omitempty"`
}

func (x *PrincipalRule) Reset() {
	*x = PrincipalRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_policy_v1_policy_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrincipalRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrincipalRule) ProtoMessage() {}

func (x *PrincipalRule) ProtoReflect() protoreflect.Message {
	mi := &file_policy_v1_policy_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrincipalRule.ProtoReflect.Descriptor instead.
func (*PrincipalRule) Descriptor() ([]byte, []int) {
	return file_policy_v1_policy_proto_rawDescGZIP(), []int{5}
}

func (x *PrincipalRule) GetResource() string {
	if x != nil {
		return x.Resource
	}
	return ""
}

func (x *PrincipalRule) GetActions() []*PrincipalRule_Action {
	if x != nil {
		return x.Actions
	}
	return nil
}

type DerivedRoles struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string     `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Definitions []*RoleDef `protobuf:"bytes,2,rep,name=definitions,proto3" json:"definitions,omitempty"`
}

func (x *DerivedRoles) Reset() {
	*x = DerivedRoles{}
	if protoimpl.UnsafeEnabled {
		mi := &file_policy_v1_policy_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DerivedRoles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DerivedRoles) ProtoMessage() {}

func (x *DerivedRoles) ProtoReflect() protoreflect.Message {
	mi := &file_policy_v1_policy_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DerivedRoles.ProtoReflect.Descriptor instead.
func (*DerivedRoles) Descriptor() ([]byte, []int) {
	return file_policy_v1_policy_proto_rawDescGZIP(), []int{6}
}

func (x *DerivedRoles) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DerivedRoles) GetDefinitions() []*RoleDef {
	if x != nil {
		return x.Definitions
	}
	return nil
}

type RoleDef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string       `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ParentRoles []string     `protobuf:"bytes,2,rep,name=parent_roles,json=parentRoles,proto3" json:"parent_roles,omitempty"`
	Computation *Computation `protobuf:"bytes,3,opt,name=computation,proto3" json:"computation,omitempty"`
}

func (x *RoleDef) Reset() {
	*x = RoleDef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_policy_v1_policy_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleDef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleDef) ProtoMessage() {}

func (x *RoleDef) ProtoReflect() protoreflect.Message {
	mi := &file_policy_v1_policy_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleDef.ProtoReflect.Descriptor instead.
func (*RoleDef) Descriptor() ([]byte, []int) {
	return file_policy_v1_policy_proto_rawDescGZIP(), []int{7}
}

func (x *RoleDef) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RoleDef) GetParentRoles() []string {
	if x != nil {
		return x.ParentRoles
	}
	return nil
}

func (x *RoleDef) GetComputation() *Computation {
	if x != nil {
		return x.Computation
	}
	return nil
}

type Computation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Computation:
	//	*Computation_Match
	//	*Computation_Script
	Computation isComputation_Computation `protobuf_oneof:"computation"`
}

func (x *Computation) Reset() {
	*x = Computation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_policy_v1_policy_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Computation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Computation) ProtoMessage() {}

func (x *Computation) ProtoReflect() protoreflect.Message {
	mi := &file_policy_v1_policy_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Computation.ProtoReflect.Descriptor instead.
func (*Computation) Descriptor() ([]byte, []int) {
	return file_policy_v1_policy_proto_rawDescGZIP(), []int{8}
}

func (m *Computation) GetComputation() isComputation_Computation {
	if m != nil {
		return m.Computation
	}
	return nil
}

func (x *Computation) GetMatch() *Match {
	if x, ok := x.GetComputation().(*Computation_Match); ok {
		return x.Match
	}
	return nil
}

func (x *Computation) GetScript() string {
	if x, ok := x.GetComputation().(*Computation_Script); ok {
		return x.Script
	}
	return ""
}

type isComputation_Computation interface {
	isComputation_Computation()
}

type Computation_Match struct {
	Match *Match `protobuf:"bytes,1,opt,name=match,proto3,oneof"`
}

type Computation_Script struct {
	Script string `protobuf:"bytes,2,opt,name=script,proto3,oneof"`
}

func (*Computation_Match) isComputation_Computation() {}

func (*Computation_Script) isComputation_Computation() {}

type Match struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Expr []string `protobuf:"bytes,1,rep,name=expr,proto3" json:"expr,omitempty"`
}

func (x *Match) Reset() {
	*x = Match{}
	if protoimpl.UnsafeEnabled {
		mi := &file_policy_v1_policy_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Match) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Match) ProtoMessage() {}

func (x *Match) ProtoReflect() protoreflect.Message {
	mi := &file_policy_v1_policy_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Match.ProtoReflect.Descriptor instead.
func (*Match) Descriptor() ([]byte, []int) {
	return file_policy_v1_policy_proto_rawDescGZIP(), []int{9}
}

func (x *Match) GetExpr() []string {
	if x != nil {
		return x.Expr
	}
	return nil
}

type PrincipalRule_Action struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action    string       `protobuf:"bytes,1,opt,name=action,proto3" json:"action,omitempty"`
	Condition *Computation `protobuf:"bytes,2,opt,name=condition,proto3" json:"condition,omitempty"`
	Effect    v1.Effect    `protobuf:"varint,3,opt,name=effect,proto3,enum=shared.v1.Effect" json:"effect,omitempty"`
}

func (x *PrincipalRule_Action) Reset() {
	*x = PrincipalRule_Action{}
	if protoimpl.UnsafeEnabled {
		mi := &file_policy_v1_policy_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrincipalRule_Action) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrincipalRule_Action) ProtoMessage() {}

func (x *PrincipalRule_Action) ProtoReflect() protoreflect.Message {
	mi := &file_policy_v1_policy_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrincipalRule_Action.ProtoReflect.Descriptor instead.
func (*PrincipalRule_Action) Descriptor() ([]byte, []int) {
	return file_policy_v1_policy_proto_rawDescGZIP(), []int{5, 0}
}

func (x *PrincipalRule_Action) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *PrincipalRule_Action) GetCondition() *Computation {
	if x != nil {
		return x.Condition
	}
	return nil
}

func (x *PrincipalRule_Action) GetEffect() v1.Effect {
	if x != nil {
		return x.Effect
	}
	return v1.Effect_EFFECT_UNSPECIFIED
}

var File_policy_v1_policy_proto protoreflect.FileDescriptor

var file_policy_v1_policy_proto_rawDesc = []byte{
	0x0a, 0x16, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x2e, 0x76, 0x31, 0x1a, 0x16, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa5, 0x01, 0x0a, 0x09, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53,
	0x65, 0x74, 0x12, 0x48, 0x0a, 0x08, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x65, 0x74, 0x2e, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x9a, 0x01, 0x02,
	0x18, 0x01, 0x52, 0x08, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x1a, 0x4e, 0x0a, 0x0d,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x27, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xdf, 0x02, 0x0a,
	0x06, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x34, 0x0a, 0x0b, 0x61, 0x70, 0x69, 0x5f, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xfa, 0x42,
	0x10, 0x72, 0x0e, 0x0a, 0x0c, 0x70, 0x61, 0x61, 0x6d, 0x73, 0x2e, 0x64, 0x65, 0x76, 0x2f, 0x76,
	0x31, 0x52, 0x0a, 0x61, 0x70, 0x69, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a,
	0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x44, 0x0a, 0x0f, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x48,
	0x00, 0x52, 0x0e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x12, 0x47, 0x0a, 0x10, 0x70, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x5f, 0x70,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61,
	0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x48, 0x00, 0x52, 0x0f, 0x70, 0x72, 0x69, 0x6e, 0x63,
	0x69, 0x70, 0x61, 0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x3e, 0x0a, 0x0d, 0x64, 0x65,
	0x72, 0x69, 0x76, 0x65, 0x64, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65,
	0x72, 0x69, 0x76, 0x65, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x48, 0x00, 0x52, 0x0c, 0x64, 0x65,
	0x72, 0x69, 0x76, 0x65, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x42, 0x12, 0x0a, 0x0b, 0x70, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x03, 0xf8, 0x42, 0x01, 0x22, 0xb2,
	0x02, 0x0a, 0x0e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x12, 0x64, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x48, 0xfa, 0x42, 0x45, 0x72, 0x43, 0x10, 0x01, 0x32, 0x3f, 0x5e, 0x5b,
	0x5b, 0x3a, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x3a, 0x5d, 0x5d, 0x5b, 0x5b, 0x3a, 0x77, 0x6f, 0x72,
	0x64, 0x3a, 0x5d, 0x5c, 0x40, 0x5c, 0x2e, 0x5c, 0x2d, 0x5d, 0x2a, 0x28, 0x5c, 0x3a, 0x5b, 0x5b,
	0x3a, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x3a, 0x5d, 0x5d, 0x5b, 0x5b, 0x3a, 0x77, 0x6f, 0x72, 0x64,
	0x3a, 0x5d, 0x5c, 0x40, 0x5c, 0x2e, 0x5c, 0x2d, 0x5d, 0x2a, 0x29, 0x2a, 0x24, 0x52, 0x08, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x2e, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0xfa, 0x42, 0x11, 0x72, 0x0f, 0x32,
	0x0d, 0x5e, 0x5b, 0x5b, 0x3a, 0x77, 0x6f, 0x72, 0x64, 0x3a, 0x5d, 0x5d, 0x2b, 0x24, 0x52, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x51, 0x0a, 0x14, 0x69, 0x6d, 0x70, 0x6f, 0x72,
	0x74, 0x5f, 0x64, 0x65, 0x72, 0x69, 0x76, 0x65, 0x64, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x42, 0x1f, 0xfa, 0x42, 0x1c, 0x92, 0x01, 0x19, 0x18, 0x01, 0x22,
	0x15, 0x72, 0x13, 0x32, 0x11, 0x5e, 0x5b, 0x5b, 0x3a, 0x77, 0x6f, 0x72, 0x64, 0x3a, 0x5d, 0x5c,
	0x2d, 0x5c, 0x2e, 0x5d, 0x2b, 0x24, 0x52, 0x12, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x65,
	0x72, 0x69, 0x76, 0x65, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x37, 0x0a, 0x05, 0x72, 0x75,
	0x6c, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x75,
	0x6c, 0x65, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x92, 0x01, 0x02, 0x08, 0x01, 0x52, 0x05, 0x72, 0x75,
	0x6c, 0x65, 0x73, 0x22, 0x99, 0x02, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x52, 0x75, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x06, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x44, 0x0a, 0x0d, 0x64, 0x65, 0x72, 0x69, 0x76, 0x65, 0x64,
	0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x42, 0x1f, 0xfa, 0x42,
	0x1c, 0x92, 0x01, 0x19, 0x18, 0x01, 0x22, 0x15, 0x72, 0x13, 0x32, 0x11, 0x5e, 0x5b, 0x5b, 0x3a,
	0x77, 0x6f, 0x72, 0x64, 0x3a, 0x5d, 0x5c, 0x2d, 0x5c, 0x2e, 0x5d, 0x2b, 0x24, 0x52, 0x0c, 0x64,
	0x65, 0x72, 0x69, 0x76, 0x65, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x35, 0x0a, 0x05, 0x72,
	0x6f, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x42, 0x1f, 0xfa, 0x42, 0x1c, 0x92,
	0x01, 0x19, 0x18, 0x01, 0x22, 0x15, 0x72, 0x13, 0x32, 0x11, 0x5e, 0x5b, 0x5b, 0x3a, 0x77, 0x6f,
	0x72, 0x64, 0x3a, 0x5d, 0x5c, 0x2d, 0x5c, 0x2e, 0x5d, 0x2b, 0x24, 0x52, 0x05, 0x72, 0x6f, 0x6c,
	0x65, 0x73, 0x12, 0x34, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x63,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x35, 0x0a, 0x06, 0x65, 0x66, 0x66, 0x65,
	0x63, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x42, 0x0a, 0xfa, 0x42, 0x07,
	0x82, 0x01, 0x04, 0x18, 0x01, 0x18, 0x02, 0x52, 0x06, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x22,
	0xe3, 0x01, 0x0a, 0x0f, 0x50, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x12, 0x66, 0x0a, 0x09, 0x70, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x48, 0xfa, 0x42, 0x45, 0x72, 0x43, 0x10, 0x01, 0x32,
	0x3f, 0x5e, 0x5b, 0x5b, 0x3a, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x3a, 0x5d, 0x5d, 0x5b, 0x5b, 0x3a,
	0x77, 0x6f, 0x72, 0x64, 0x3a, 0x5d, 0x5c, 0x40, 0x5c, 0x2e, 0x5c, 0x2d, 0x5d, 0x2a, 0x28, 0x5c,
	0x3a, 0x5b, 0x5b, 0x3a, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x3a, 0x5d, 0x5d, 0x5b, 0x5b, 0x3a, 0x77,
	0x6f, 0x72, 0x64, 0x3a, 0x5d, 0x5c, 0x40, 0x5c, 0x2e, 0x5c, 0x2d, 0x5d, 0x2a, 0x29, 0x2a, 0x24,
	0x52, 0x09, 0x70, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x12, 0x2e, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0xfa, 0x42,
	0x11, 0x72, 0x0f, 0x32, 0x0d, 0x5e, 0x5b, 0x5b, 0x3a, 0x77, 0x6f, 0x72, 0x64, 0x3a, 0x5d, 0x5d,
	0x2b, 0x24, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x05, 0x72,
	0x75, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c,
	0x52, 0x75, 0x6c, 0x65, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x92, 0x01, 0x02, 0x08, 0x01, 0x52, 0x05,
	0x72, 0x75, 0x6c, 0x65, 0x73, 0x22, 0xd3, 0x02, 0x0a, 0x0d, 0x50, 0x72, 0x69, 0x6e, 0x63, 0x69,
	0x70, 0x61, 0x6c, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x64, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x48, 0xfa, 0x42, 0x45, 0x72, 0x43,
	0x10, 0x01, 0x32, 0x3f, 0x5e, 0x5b, 0x5b, 0x3a, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x3a, 0x5d, 0x5d,
	0x5b, 0x5b, 0x3a, 0x77, 0x6f, 0x72, 0x64, 0x3a, 0x5d, 0x5c, 0x40, 0x5c, 0x2e, 0x5c, 0x2d, 0x5d,
	0x2a, 0x28, 0x5c, 0x3a, 0x5b, 0x5b, 0x3a, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x3a, 0x5d, 0x5d, 0x5b,
	0x5b, 0x3a, 0x77, 0x6f, 0x72, 0x64, 0x3a, 0x5d, 0x5c, 0x40, 0x5c, 0x2e, 0x5c, 0x2d, 0x5d, 0x2a,
	0x29, 0x2a, 0x24, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x43, 0x0a,
	0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x69, 0x6e, 0x63,
	0x69, 0x70, 0x61, 0x6c, 0x52, 0x75, 0x6c, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x08, 0xfa, 0x42, 0x05, 0x92, 0x01, 0x02, 0x08, 0x01, 0x52, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x1a, 0x96, 0x01, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a,
	0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34,
	0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f,
	0x6d, 0x70, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x35, 0x0a, 0x06, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x82, 0x01, 0x04, 0x18,
	0x01, 0x18, 0x02, 0x52, 0x06, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x22, 0x7e, 0x0a, 0x0c, 0x44,
	0x65, 0x72, 0x69, 0x76, 0x65, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1a, 0xfa, 0x42, 0x17, 0x72, 0x15,
	0x10, 0x01, 0x32, 0x11, 0x5e, 0x5b, 0x5b, 0x3a, 0x77, 0x6f, 0x72, 0x64, 0x3a, 0x5d, 0x5c, 0x2d,
	0x5c, 0x2e, 0x5d, 0x2b, 0x24, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3e, 0x0a, 0x0b, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c,
	0x65, 0x44, 0x65, 0x66, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x92, 0x01, 0x02, 0x08, 0x01, 0x52, 0x0b,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xb7, 0x01, 0x0a, 0x07,
	0x52, 0x6f, 0x6c, 0x65, 0x44, 0x65, 0x66, 0x12, 0x2c, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x18, 0xfa, 0x42, 0x15, 0x72, 0x13, 0x32, 0x11, 0x5e, 0x5b,
	0x5b, 0x3a, 0x77, 0x6f, 0x72, 0x64, 0x3a, 0x5d, 0x5c, 0x2d, 0x5c, 0x2e, 0x5d, 0x2b, 0x24, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x44, 0x0a, 0x0c, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f,
	0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x42, 0x21, 0xfa, 0x42, 0x1e,
	0x92, 0x01, 0x1b, 0x08, 0x01, 0x18, 0x01, 0x22, 0x15, 0x72, 0x13, 0x32, 0x11, 0x5e, 0x5b, 0x5b,
	0x3a, 0x77, 0x6f, 0x72, 0x64, 0x3a, 0x5d, 0x5c, 0x2d, 0x5c, 0x2e, 0x5d, 0x2b, 0x24, 0x52, 0x0b,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x38, 0x0a, 0x0b, 0x63,
	0x6f, 0x6d, 0x70, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d,
	0x70, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x65, 0x0a, 0x0b, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x05, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x4d, 0x61, 0x74, 0x63, 0x68, 0x48, 0x00, 0x52, 0x05, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x12, 0x18,
	0x0a, 0x06, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x06, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x42, 0x12, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x70,
	0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x03, 0xf8, 0x42, 0x01, 0x22, 0x2b, 0x0a, 0x05,
	0x4d, 0x61, 0x74, 0x63, 0x68, 0x12, 0x22, 0x0a, 0x04, 0x65, 0x78, 0x70, 0x72, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x42, 0x0e, 0xfa, 0x42, 0x0b, 0x92, 0x01, 0x08, 0x08, 0x01, 0x22, 0x04, 0x72,
	0x02, 0x10, 0x01, 0x52, 0x04, 0x65, 0x78, 0x70, 0x72, 0x42, 0x3e, 0x5a, 0x3c, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x68, 0x61, 0x72, 0x69, 0x74, 0x68, 0x65,
	0x2f, 0x6d, 0x65, 0x6e, 0x73, 0x68, 0x65, 0x6e, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2f, 0x76, 0x31,
	0x3b, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_policy_v1_policy_proto_rawDescOnce sync.Once
	file_policy_v1_policy_proto_rawDescData = file_policy_v1_policy_proto_rawDesc
)

func file_policy_v1_policy_proto_rawDescGZIP() []byte {
	file_policy_v1_policy_proto_rawDescOnce.Do(func() {
		file_policy_v1_policy_proto_rawDescData = protoimpl.X.CompressGZIP(file_policy_v1_policy_proto_rawDescData)
	})
	return file_policy_v1_policy_proto_rawDescData
}

var file_policy_v1_policy_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_policy_v1_policy_proto_goTypes = []interface{}{
	(*PolicySet)(nil),            // 0: policy.v1.PolicySet
	(*Policy)(nil),               // 1: policy.v1.Policy
	(*ResourcePolicy)(nil),       // 2: policy.v1.ResourcePolicy
	(*ResourceRule)(nil),         // 3: policy.v1.ResourceRule
	(*PrincipalPolicy)(nil),      // 4: policy.v1.PrincipalPolicy
	(*PrincipalRule)(nil),        // 5: policy.v1.PrincipalRule
	(*DerivedRoles)(nil),         // 6: policy.v1.DerivedRoles
	(*RoleDef)(nil),              // 7: policy.v1.RoleDef
	(*Computation)(nil),          // 8: policy.v1.Computation
	(*Match)(nil),                // 9: policy.v1.Match
	nil,                          // 10: policy.v1.PolicySet.PoliciesEntry
	(*PrincipalRule_Action)(nil), // 11: policy.v1.PrincipalRule.Action
	(v1.Effect)(0),               // 12: shared.v1.Effect
}
var file_policy_v1_policy_proto_depIdxs = []int32{
	10, // 0: policy.v1.PolicySet.policies:type_name -> policy.v1.PolicySet.PoliciesEntry
	2,  // 1: policy.v1.Policy.resource_policy:type_name -> policy.v1.ResourcePolicy
	4,  // 2: policy.v1.Policy.principal_policy:type_name -> policy.v1.PrincipalPolicy
	6,  // 3: policy.v1.Policy.derived_roles:type_name -> policy.v1.DerivedRoles
	3,  // 4: policy.v1.ResourcePolicy.rules:type_name -> policy.v1.ResourceRule
	8,  // 5: policy.v1.ResourceRule.condition:type_name -> policy.v1.Computation
	12, // 6: policy.v1.ResourceRule.effect:type_name -> shared.v1.Effect
	5,  // 7: policy.v1.PrincipalPolicy.rules:type_name -> policy.v1.PrincipalRule
	11, // 8: policy.v1.PrincipalRule.actions:type_name -> policy.v1.PrincipalRule.Action
	7,  // 9: policy.v1.DerivedRoles.definitions:type_name -> policy.v1.RoleDef
	8,  // 10: policy.v1.RoleDef.computation:type_name -> policy.v1.Computation
	9,  // 11: policy.v1.Computation.match:type_name -> policy.v1.Match
	1,  // 12: policy.v1.PolicySet.PoliciesEntry.value:type_name -> policy.v1.Policy
	8,  // 13: policy.v1.PrincipalRule.Action.condition:type_name -> policy.v1.Computation
	12, // 14: policy.v1.PrincipalRule.Action.effect:type_name -> shared.v1.Effect
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_policy_v1_policy_proto_init() }
func file_policy_v1_policy_proto_init() {
	if File_policy_v1_policy_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_policy_v1_policy_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PolicySet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_policy_v1_policy_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Policy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_policy_v1_policy_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourcePolicy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_policy_v1_policy_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_policy_v1_policy_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrincipalPolicy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_policy_v1_policy_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrincipalRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_policy_v1_policy_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DerivedRoles); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_policy_v1_policy_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleDef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_policy_v1_policy_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Computation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_policy_v1_policy_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Match); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_policy_v1_policy_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrincipalRule_Action); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_policy_v1_policy_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*Policy_ResourcePolicy)(nil),
		(*Policy_PrincipalPolicy)(nil),
		(*Policy_DerivedRoles)(nil),
	}
	file_policy_v1_policy_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*Computation_Match)(nil),
		(*Computation_Script)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_policy_v1_policy_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_policy_v1_policy_proto_goTypes,
		DependencyIndexes: file_policy_v1_policy_proto_depIdxs,
		MessageInfos:      file_policy_v1_policy_proto_msgTypes,
	}.Build()
	File_policy_v1_policy_proto = out.File
	file_policy_v1_policy_proto_rawDesc = nil
	file_policy_v1_policy_proto_goTypes = nil
	file_policy_v1_policy_proto_depIdxs = nil
}
